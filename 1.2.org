#+TITLE: 1.2 Procedures and the Processes Then Generate

* Exercise 1.9
Each of the following two procedures defines a method for adding two positive
integers in terms of the procedures inc, which increments its argument by 1, and
dec, which decrements its argument by 1.

#+BEGIN_SRC scheme
(define (+ a b)
  (if (= a 0)
      b
      (inc (+ (dec a) b))))

(define (+ a b)
  (if (= a 0)
      b
      (+ (dec a) (inc b))))
#+END_SRC

#+RESULTS:
: #<void>

Using the substitution model, illustrate the process generated by each procedure
in evaluating (+ 4 5). Are these processes iterative or recursive?
Answer: The first definition is recursive.  Since the result of the subproblem
must be incremented, space is required to store the result.
The second definition is iterative since it returns a direct call to a
subproblem without needing to manipulate the result.

* Exercise 1.10
 The following procedure computes a mathematical function called Ackermann's
 function.
 #+BEGIN_SRC scheme
(define (A x y)
  (cond ((= y 0) 0)
        ((= x 0) (* 2 y))
        ((= y 1) 2)
        (else (A (- x 1)
                 (A x (- y 1))))))

(list
 (A 1 10)
 (A 2 4)
 (A 3 3))
 #+END_SRC

 #+RESULTS:
 | 1024 | 65536 | 65536 |


** 1024 = 2^10

* Exercise 1.11
A function f is defined by the rule that f(n)=n if n<3 and
f(n)=f(n−1)+2f(n−2)+3f(n−3) if n>3. Write a procedure that computes f by means
of a recursive process.
#+BEGIN_SRC scheme
(define (f n)
  (if (< n 3)
      n
      (+ (f (- n 1))
         (* 2 (f (- n 2)))
         (* 3 (f (- n 3))))))
(f 10)
#+END_SRC

#+RESULTS:
: 1892

* Exercise 1.12
Write a procedure that computes elements of Pascal's triangle by means of a
recursive process. If a number lies outside of the triangle, return 0 (this
makes sense if we view pascal as the combination function ). Start counting rows
and columns from 0.
#+BEGIN_SRC scheme
(define (pascal row col)
  (cond [(or (< row 0) (< col 0) (> col row)) 0]
        [(and (= row 0) (= col 0)) 1]
        [else (+ (pascal (- row 1) col)
                 (pascal (- row 1) (- col 1)))] ))

(pascal 5 -4)


#+END_SRC

#+RESULTS:
: 0


* Exercise 1.13
Prove that Fib(n) is the closest integer to ϕ^n/5
